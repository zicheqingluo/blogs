(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{464:function(s,e,a){"use strict";a.r(e);var n=a(1),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[s._v("#")]),s._v(" 查")]),s._v(" "),e("h4",{attrs:{id:"普通查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#普通查询"}},[s._v("#")]),s._v(" 普通查询")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 查询所有列\nselect * from student ;\n\n# 查询指定列\nselect name from student ;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("比较运算符包括 <,<=,=,>=,!=,<>,between,in,not in,is")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 条件查询，列与值严格对应 数字不必加单引号，字符串必须加单引号\nselect * from student where id=2 and name='李四'； # 交集\nselect * from student where id=2 or name = '张三'；# 并集\nselect * from student where servlet >70;\n\n# in\nselect * from student where age in (11,12);\n#in 等同于\nselect * from student where age =11 or age = 12;\n# not in,不等于\nselect * from student where age not in (11,12);\n\n# 判空条件\nselect * from student where address is null;\nselect * from student where address='';\nselect * from student where address is null or address=''; \n# or可用||替代\nselect * from student where address is null || address=''; \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("逻辑运算符包括not,!,or,||,and,&&")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# and可用&&代替\nselect * from student where js between 75 and 90; #（包前包后）\nselect * from student where js>=75 and js<=90;\nselect * from student where js>=75 && js<=90;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("通配符包括like模糊匹配，%通配任意字符，_通配单一字符")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nselect * form user where 1; # where 1,1为true，0为false，因为所有行都存在都为真，所以都会查询到，where 0 则一行都查询不到\n\n# 广义投影，投影就是上面的取列，广义投影是取列同时做运算，如下：age +1 为运算\nselect uid,name,age+1 from user where 1;\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h4",{attrs:{id:"内置方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置方法"}},[s._v("#")]),s._v(" "),e("strong",[s._v("内置方法")])]),s._v(" "),e("ul",[e("li",[s._v("floor")])]),s._v(" "),e("p",[s._v("floor 取余数（如1.3返回1,1.9也返回1）")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select num/10 from mian; 把数字除以10得到余数\n# 用floor 取余得到整数，在乘以10变回原来的大小\nselect floor(num/10)*10 from mian;先把数字变成小数，然后floor取余，在乘以10变回原\n来的值。\n# 应用：update修改(题目）\nupdate mian set num=floor(num/10)*10 where num between 20 and 39;\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ul",[e("li",[s._v("substring")])]),s._v(" "),e("p",[s._v("substring 截取字符串")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select goods_id,substring(goods_name,4) from goods where goods_name like '诺基亚%'\n# 显示goods_id，goods_name(表中goods_name中诺基亚开头的行的第四个字符开始往后的部分)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("concat")]),s._v(" "),e("p",[s._v("concat 字符串拼接")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select goods_id,concat('htc',substring(goods_name,4)) from goods where goods_name\n like '诺基亚%';  \n # 然后将htc与截取的部分拼接\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("max() 求最大")]),s._v(" "),e("li",[s._v("count() 统计行数")]),s._v(" "),e("li",[s._v("avg()求平均值")]),s._v(" "),e("li",[s._v("min()求最小")]),s._v(" "),e("li",[s._v("sum()求总和")])]),s._v(" "),e("h4",{attrs:{id:"进阶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[s._v("#")]),s._v(" "),e("strong",[s._v("进阶")])]),s._v(" "),e("h5",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# group by 分组 #根据id分组，求平均数\nselect avg(shop_price) from goods group by cat_id;\n\n# order by排序 升序：asc（默认） 降序：desc\n# 升序：数值：递增，字母：自然顺序（a-z）反之降序\n# 按价格排序（升序）\nselect goods_id,goods_name,shop_price from goods order by shop_price ;\n# 按价格降序（降序）\nselect goods_id,goods_name,shop_price from goods order by shop_price desc;\n# 多序排列（用，隔开）\nselect goods_id,goods_name,shop_price from goods order  by shop_price asc,goods_id desc,\ncat_id desc;\n\n# limit 限制返回记录条数\n# 按商店价格由高到低排序，取出排名前三的\nselect goods_id,goods_name,shop_price from goods order by desc limit 0,3;\n# 按商店价格由高到低排序，取出第四第五行\nselect goods_id,goods_name,shop_price from goods order by desc limit 3,2；\n3代表偏移量，也就是越过前三行，2表示取出条目，取出两行内容\n\n# having HAVING 是 MySQL 中用于筛选分组数据的子句，它的作用是在 GROUP BY 语句的基础上对分组数据进行进一步过滤。必须在group by之后，数据多的场景HAVING 子句的性能可能较差\n# 对分组数据进行条件判断，筛选出满足条件的分组。\n# 进一步优化查询性能，减少数据检索的次数和范围。\n#result 表中 查询出2门及2门以上不及格者的平均成绩\nselect name,sum(score<60) as gk,avg(score) from result group by name having gk>=2;\n# 首先group by安装name分组，然后sum按分组进行统计score<60的出的结果重命名为gk，having进一步安装gk过滤\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("h4",{attrs:{id:"子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[s._v("#")]),s._v(" "),e("strong",[s._v("子查询")])]),s._v(" "),e("h5",{attrs:{id:"where"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[s._v("#")]),s._v(" "),e("em",[s._v("where")])]),s._v(" "),e("p",[s._v("引子")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 查询每个栏目下最新的产品（goods_id最大即为最新）\nselet max(goods_id),goods_name,shop_price from goods group by cat_id;\n### 此时，会出现错误，goods_id最大没错，但名字和价格却和goods_id不匹配，因为名字和价格是按照goods_id栏目里第一个取出的，并不是取出的goods_id的实际名字和价格。\n# 解法：那应该先给表格按照goods_id排序，那样最大的goods_id对应的名字和价格就是匹配的\nselet max(goods_id),goods_name,shop_price from goods order by goods_id desc group by cat_id\n### 但是，上面这种结构属于语法错误（order在group前面）\n### 注意：where,group by,having,order by,limit  必须按照此顺序写\n# 但反过来写发现还是不匹配，所以要用到where子查询\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("什么是where子查询")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 查询最新的产品（不按组）\nselect goods_id,goods_name,shop_price from goods order by goods_id desc limit 0,1；\n# 可以换一种写法，不用limit\nselect goods_id,goods_name,shop_price from goods where goods_id=(\nselect max(goods_id) from goods); # 因为查询的是最新的产品也就是goods_id最大，当按照goods_id从大到小排序后，只要把最大的一行取出就对了，所有又加了一个子查询。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("解决上面的问题")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 1.先把每个栏目下goods_id 最大的取出来\nselect max(goods_id),goods_name,cat_id from goods group by cat_id;\n# 2.把最大的信息取出来（把上面的作为子查询）\nselect cat_id,goods_id,goods_name from goods where goods_id in (select max(goods_id) from goods group by cat_id);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h5",{attrs:{id:"from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" "),e("em",[s._v("from")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select cat_id,goods_id,goods_name from goods where goods_id between 20 and 25\n# 上面的查询结果作为一张新表tmp 再次被查询)\nselect cat_id,goods_name from (select cat_id,goods_id,goods_name from goods where goods_id\n between 20 and 25) as tmp group by cat_id;\n# 和where不同在于where子查询作为一个数一个条件再次应用，而from作为一张表\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h5",{attrs:{id:"exists"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exists"}},[s._v("#")]),s._v(" "),e("em",[s._v("exists")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# category表是商品的类别对应cat_id goods表是商品详情\n# 问题：将goods表中的商品名查找出相应的商品类别\n# 思路：两张表中相同的是cat_id，只需把goods表中的cat_id与category表中的相同的显示出来\nselect * from category where exists (select * from goods where goods.cat_id=\ncategory.cat_id); #显示category表的全部，条件是两张表cat_id相同的部分goods.cat_id表示 goods表的cat_id列\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h4",{attrs:{id:"连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[s._v("#")]),s._v(" "),e("strong",[s._v("连接")])]),s._v(" "),e("h5",{attrs:{id:"内连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[s._v("#")]),s._v(" "),e("em",[s._v("内连接")])]),s._v(" "),e("p",[s._v("boy表")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("hid")]),s._v(" "),e("th",[s._v("name")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("A")]),s._v(" "),e("td",[s._v("屌丝")])]),s._v(" "),e("tr",[e("td",[s._v("B")]),s._v(" "),e("td",[s._v("杨过")])]),s._v(" "),e("tr",[e("td",[s._v("C")]),s._v(" "),e("td",[s._v("郭靖")])])])]),s._v(" "),e("p",[s._v("girl表")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("hid")]),s._v(" "),e("th",[s._v("name")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("B")]),s._v(" "),e("td",[s._v("小龙女")])]),s._v(" "),e("tr",[e("td",[s._v("C")]),s._v(" "),e("td",[s._v("黄蓉")])]),s._v(" "),e("tr",[e("td",[s._v("D")]),s._v(" "),e("td",[s._v("宅女")])])])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 把两张表做比对，把boy表和girl表中相同的部分作为条件来比对其他部分\n# 如图，相同的部分为hid作为条件，来比较name\nselect boy.hid,boy.bname,girl.hid,girl.gname from boy inner join girl on boy.hid=girl.hid;\n\n# boy.hid,boy.bname   显示boy表中的hid和name 用逗号隔开 之所以hid和name之前都有点与前面的表名连接是因为boy表和girl表都有hid和name,所以用来区分，如果都不相同，则直接写inner join 表示把两张表连接起来.\n# on boy.hid=girl.hid  条件为boy表中的hid 和girl表中的hid相同部分\n\n## 多次链接\n## 多次链接\n# 查出 2006-6-1 到2006-7-1之间举行的所有比赛\nselect mid,t.tname as h,mres,t2.tname as g,matime from \nm inner join t\non m.hid=t.tid\ninner join t as t2\non m.gid=t2.tid\nwhere matime between '2006-06-1' and '2006-07-01';\n# 必须给第二张表改名，否则多次链接不知道连的是哪个t表\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h5",{attrs:{id:"左右连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#左右连接"}},[s._v("#")]),s._v(" "),e("em",[s._v("左右连接")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select boy.hid,boy.bname,girl.hid,girl.gname from boy left join girl on boy.hid=girl.hid;\n# 和内连接区别在于inner换为left 右连接为right\n# 左连接以左边数字为准，查询右边相关数据，左边表所以会全部显示，而右边标如果有查不到的补null\n# 右连接与左连接相同\n# 如：取出所有商品的商品名，栏目名，价格\nselect goods_name,cat_name,shop_price from \ngoods left join category            \non goods.cat_id=category.cat_id;\n# 取出第4个栏目下的商品的商品名,栏目名,价格\nselect goods_name,cat_name,shop_price from \necs_goods left join ecs_category\non ecs_goods.cat_id=ecs_category.cat_id\nwhere goods.cat_id = 4;\n# 前面已经把两张表合成一张了，后面只需查\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h5",{attrs:{id:"union"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[s._v("#")]),s._v(" "),e("strong",[s._v("union")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# union查询就是把2条或多条sql的查询结果合并成1个结果集，与连接不同的是，连接是左右，而union是上下\n\n# union语句必须满足一个条件；各语句取出的列数相同，但列名称未必要一致，显示结果以前面的名称\n为准\n\n# 注意：使用union时，完全相同的行将会被合并，合并是比较耗时的工作，一般不用union进行合并，使用"union all"可以避免合并，可以提高速度\n\n# order by 只能用在union语句的最后，不能再两个子句中使用。\nselect goods_id,cat_id,goods_name from goods where cat_id=2 union select goods_id, cat_id,goods_name from goods2 where cat_id=4;\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"增"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[s._v("#")]),s._v(" 增")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 插入所有字段，一定要依次按顺序插入\ninsert into student values(1,'张三'，‘男’，20)；\n\n# 插入部分字段\ninsert into student （id,name）values(2,'李四')；\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[s._v("#")]),s._v(" 改")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 修改所有数据（建议少用）\nupdate student set gender=‘女’；\n\n# 条件修改 修改id为1 的学生为男\nupdate student set gender='男' where id =1;\n# 多个字段用逗号分开\nupdate student set gender=‘男’，age=30 where id=2;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h4",{attrs:{id:"修改mysql-user表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改mysql-user表"}},[s._v("#")]),s._v(" "),e("strong",[s._v("修改mysql user表")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 修改mysql 用户信息 修改李四的密码\nupdate auth.users set user_password=user_passwd=password('1234') where user_name='lisi';\n# 刷新可生效 \t\nflush privileges;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"删"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[s._v("#")]),s._v(" 删")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 删除所有数据（谨慎！）\ndelete from student；\n# 条件删除\ndelete from student where id=2;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);