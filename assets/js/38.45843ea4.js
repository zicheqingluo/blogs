(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{489:function(t,r,s){"use strict";s.r(r);var e=s(1),a=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[r("strong",[t._v("pytorch简介")])]),t._v(" "),r("ul",[r("li",[t._v("具有强大GPU加速的张量计算（如NumPy）")]),t._v(" "),r("li",[t._v("基于基于磁带的自动刻度系统构建的深度神经网络")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("torch"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("em",[t._v("如果使用cpu推理直接pip install torch 即可，GPU推理继续阅读")])]),t._v(" "),r("p",[r("strong",[t._v("安装")])]),t._v(" "),r("p",[t._v("应该安装什么样的版本，首先需要参考使用的模型及显卡cuda版本，应该根据模型看兼容的cuda版本，根据cuda版本选择兼容的pytorch版本。")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("pytorch安装方法，按照系统选择适合的版本"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("windows示例：")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("卸载当前版本pytorch，如果为避免不必要的麻烦，默认pip安装的torch只支持cpu")]),t._v(" "),r("blockquote",[r("p",[t._v("最好是先安装pytorch这样可控，如果是先安装项目依赖可能会被动把pytorch下载下来，为防止版本不对就需要先进性卸载。当然也可以先执行最下方命令验证下是否支持gpu，如以支持则跳过安装。")])]),t._v(" "),r("ul",[r("li",[r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("pip uninstall torch torchvision torchaudio\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])])])])]),t._v(" "),r("li",[r("p",[t._v("安装11.8版本")]),t._v(" "),r("ul",[r("li",[r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])])])])]),t._v(" "),r("li",[r("p",[t._v("验证")]),t._v(" "),r("ul",[r("li",[r("p",[r("code",[t._v("pip list")]),t._v(" 有如下显示：")])]),t._v(" "),r("li",[r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("torch              2.0.1+cu118\ntorchaudio         2.0.2+cu118\ntorchvision        0.15.2+cu118\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br")])])]),t._v(" "),r("li",[r("p",[t._v("进入python命令行")]),t._v(" "),r("ul",[r("li",[r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("import torch\n>>> torch.cuda.is_available()\nTrue\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br")])])]),t._v(" "),r("li",[r("p",[t._v("输出True则表示安装的torch支持GPU")])])])])])])])])}),[],!1,null,null,null);r.default=a.exports}}]);